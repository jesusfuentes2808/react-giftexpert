{"version":3,"sources":["components/AddCategory.js","components/GifGridItems.js","helpers/getGifts.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItems","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifts","map","item","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAoCeA,MAjCf,YAAwC,IAAjBC,EAAgB,EAAhBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,mCACI,sBAAMC,SAdO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAUd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAVU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,QCLhBG,MATf,YAAwC,EAAjBC,GAAkB,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,IAC9B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,0FAC2EO,UAAUF,GADrF,sBAGDG,MAAMR,GAHL,cAGdS,EAHc,gBAIIA,EAAKC,OAJT,uBAIZC,EAJY,EAIZA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC3B,MAAO,CACHhB,GAAIgB,EAAKhB,GACTC,MAAOe,EAAKf,MACZC,IAAG,UAAEc,EAAKC,cAAP,aAAE,EAAaC,iBAAiBhB,QAVvB,kBAcbY,GAda,4CAAH,sDCiCNK,MA5Bf,YAA+B,IAAZZ,EAAW,EAAXA,SAGf,EAA4BrB,mBAAS,IAArC,mBAYA,GAZA,UCLyB,SAAEqB,GAC3B,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OAtBAC,qBAAU,WACNjB,EAAWC,GACNiB,MAAK,SAACC,GAEHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IAYGc,EDXiBK,CAAcnB,IAA/BM,EAAP,EAAOA,KAAMO,EAAb,EAAaA,QAEb,OAAO,qCACK,oBAAIjB,UAAU,oCAAd,SAAoDI,IACnDa,GAAW,2CACZ,qBAAKjB,UAAU,YAAf,SAEYU,EAAKE,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,eAAgCA,GAAbA,EAAKhB,aEKxD2B,MA5Bf,WAEI,MAAoCzC,mBAAS,CAAE,cAA/C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAGQ2C,EAAWb,KACP,SAACR,GAAD,OACI,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,YClB3CsB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b4dde27e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({ setCategories }){\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","import React from \"react\";\r\n\r\nfunction GifGridItems({id, title, url}) {\r\n    return(\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItems;","export const getGifts = async (category) => {\r\n    const url= `https://api.giphy.com/v1/gifs/search?api_key=PCzWSStoztZlwezlctf0Ilfqv6hiWAr6&q=${ encodeURI(category) }&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data }  = await resp.json();\r\n\r\n    const gifts = data.map(item => {\r\n        return {\r\n            id: item.id,\r\n            title: item.title,\r\n            url: item.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifts;\r\n}","import {useEffect, useState} from \"react\";\r\nimport GifGridItems from \"./GifGridItems\";\r\nimport {getGifts} from \"../helpers/getGifts\";\r\nimport {useFetchGifts} from \"../hooks/useFetchGifts\";\r\n\r\nfunction GiftGrid({category}) {\r\n\r\n    //const [count, setCount] = useState(0)\r\n    const [images, setImages] = useState([]);\r\n\r\n    // si no se envian dependencias solo se ejecutan una vez\r\n    /*useEffect(() => {\r\n        /*getGifts( category ).then( img => {\r\n            return setImages(img);\r\n        });*/\r\n    /*\r\n        getGifts( category ).then( setImages );\r\n\r\n    }, [ category ]);*/\r\n\r\n    const {data, loading} = useFetchGifts(category);\r\n\r\n    return <>\r\n                <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n                {loading && <p>Loading...</p>}\r\n                <div className=\"card-grid\">\r\n                        {\r\n                            data.map((item) => <GifGridItems key={item.id} {...item}/>)\r\n                        }\r\n                </div>\r\n            </>\r\n}\r\n\r\nexport default GiftGrid;","import {useEffect, useState} from \"react\";\r\nimport {getGifts} from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts(  category )\r\n            .then((imgs) => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n\r\n            });\r\n    }, [category]);\r\n\r\n\r\n    // setTimeout(\r\n    //     () => {\r\n    //         setState({\r\n    //             data: [1,2,3,4,5,6,7],\r\n    //             loading: false,\r\n    //         }, 3000);\r\n    //     }, 3000\r\n    // )\r\n\r\n    return state;\r\n}","import React, {useState} from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GiftGrid from \"./components/GiftGrid\";\r\n\r\nfunction GiftExpertApp() {\r\n    //const [categories, setCategories] = useState([ 'One Punch', 'Samurai X', 'Dragon Ball' ]);\r\n    const [categories, setCategories] = useState([ 'One Punch' ]);\r\n\r\n    /*const handleAdd = () => {\r\n        //setCategories([...categories, 'Nuevo']);\r\n        setCategories(cats => [...cats, 'Nuevo']);\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n\r\n                {\r\n                    categories.map(\r\n                        (category) => (\r\n                            <GiftGrid key={category} category={category} />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from \"./GiftExpertApp\";\n\nReactDOM.render(\n    <GiftExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}